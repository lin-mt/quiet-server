#
# Copyright (C) 2023 lin-mt<lin-mt@outlook.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

common.unknown.code=unknown code: {0}
common.curd.create.success=create success
common.curd.create.failure=create failure
common.curd.update.success=update success
common.curd.update.failure=update failure
common.curd.read.success=read success
common.curd.read.failure=read failure
common.curd.delete.success=delete success
common.curd.delete.failure=delete failure
common.account.no.login=not logged in, please log in again
common.account.login.success=login successful
common.account.login.failure=incorrect username or password
common.account.locked=The account is locked, please contact the administrator
common.account.expired=Account expired, please contact administrator
common.account.logout.success=logout success
common.account.no.permission=no permission to access, please contact the administrator
# system start
permission.roleId.notExist=Role ID of permission information: {} does not exist
role.id.not.exist=Role ID does not exist: {0}
role.roleName.exist=Role name already exists: {0}
role.roleName.does.not.exist=Role name: {} does not exist
role.parent.id.no.exist=Parent role ID does not exist: {0}
role.not.exist=Role does not exist
role.can.not.delete.has.children=This role has sub-roles and cannot be deleted
role.can.not.delete.has.permission.config=There is permission configuration information under this role and cannot be deleted
user.username.exist=Username already exists: {0}
user.id.not.exist=User ID: {0} does not exist
userRole.role.id.no.exist=Role ID does not exist: {0}
userRole.user.id.no.exist=User ID does not exist: {0}
dept.not.exit.id=Department ID does not exist: {0}
dept.deptName.exist=Department name already exists: {0}
dept.has.children.can.not.deleted=There are sub-department information under this department and cannot be deleted
dept.has.member.can.not.deleted=There is member information under this department and cannot be deleted
team.teamName.exist=Team name already exists: {0}
dictType.serviceId.key.exist=Data dictionary key: {1} already exists under the service ID: {0}
dictType.id.not.exist=There is no data dictionary type with ID: {0]
dictType.has.dict..cannot.delete=There is data dictionary information under this data dictionary type, which cannot be deleted.
dict.id.not.exist=There is no data dictionary with ID: {0}
dict.level.not.exist=There is no data dictionary of level {0} with key {1}
dict.typeId.key.exist=Data dictionary with key: {1} already exists under data dictionary type ID: {0}
dict.has.children.canNot.delete=The data dictionary with the data dictionary type ID: {0} and key: {1} has sub-data dictionaries and cannot be deleted
dict.key.must.numeric=Each character of the key of the dictionary must be a number.
# system end
# scrum start
project.id.not.exist=Project ID: {0} does not exist
project.group-id.name.exist=A project with the project name {1} already exists under the project team ID: {0}
demand.id.notExist=There is no demand information with demand ID: {0}
demand.in.project.title.exist=A demand titled: {0} already exists in the project
demand.parentId.not.exist=The parent demand ID is wrong, there is no demand with ID: {0}
demand.hasTasks.canNotDelete=There are tasks under this demand, which cannot be deleted
demand.iterationId.notNull.canNotDelete=The demand ID: {0} has entered the iteration and cannot be deleted
template.name.exist=Template name: {0} already exists
template.hasProjectUse.can.not.delete=A project uses a template with a template ID of: {0}, which cannot be deleted
template.nonTaskStep.canNotEnable=There is no configuration information of the task step under the template with template ID: {0}, and it cannot be enabled
template.nonPriority.canNotEnable=There is no priority configuration information under the template with template ID: {0} and cannot be enabled
taskStep.id.notExist=There is no task step information with task step ID: {0}
taskStep.templateId.name.repeat=There can't be duplicate task step names under a template.
taskStep.hasTask.canNotDelete=Failed to delete a task step. There is a task in the deleted task step: {0}
priority.templateId.name.repeat=There can't be duplicate priority names under one template.
projectGroup.canNot.delete.projectExist=There are projects under the project group, and the project group cannot be deleted.
projectGroup.name.exist=There is already a project group named {0}
priority.hasDemand.canNotDelete=Failed to delete priority. Some demands are in the deleted priority: {0}
version.project.name.exist=A version with the name: {1} already exists in the project with project ID: {0}
version.id.not.exist=No version with ID: {0}
version.hasChild.canNotDelete=Under the version with the version ID: {0}, there are sub-versions, this version cannot be deleted
version.hasIteration.canNotDelete=Under the version with version ID: {0}, there is an iteration, and the version cannot be deleted
iteration.versionId.name.exist=Iteration with name: {1} already exists under version with version ID: {0}
iteration.next.end=The next iteration has ended, please reselect
iteration.hasDemand.canNotDelete=Under the iteration with the iteration ID: {0}, there is a demand and the iteration cannot be deleted
iteration.id.not.exist=There is no iteration information with iteration ID: {0}
iteration.canNotFindNextIteration=Cannot find the iteration information for the next iteration
task.demandId.title.exist=A task titled: {1} already exists under the demand with ID: {0}
task.ids.notExist=No task information with task ID: {0}
task.preTask.contains.canNotDelete=Post task exists: {0} cannot be deleted
# scrum end